name: Build and Deploy

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v2

      # Build backend image
      - name: Build Backend Docker Image
        run: |
          cd backend
          docker build -t divyanshujha/contest-backend:latest .

      # Build frontend image
      - name: Build Frontend Docker Image
        run: |
          cd frontend
          docker build -t divyanshujha/contest-frontend:latest .

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Backend Image to Docker Hub
        run: docker push divyanshujha/contest-backend:latest

      - name: Push Frontend Image to Docker Hub
        run: docker push divyanshujha/contest-frontend:latest

      - name: Deploy to Production Server via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            # WITHOUT DOCKER-COMPOSE
            # # Pull latest images from Docker Hub
            # sudo docker pull divyanshujha/contest-backend:latest
            # sudo docker pull divyanshujha/contest-frontend:latest
            
            # # Stop and remove the existing containers if they exist
            # sudo docker stop contest_backend || true
            # sudo docker rm contest_backend || true

            # sudo docker stop contest_frontend || true
            # sudo docker rm contest_frontend || true
            
            # # Run docker-compose to start the updated services
            # sudo docker run -d --name contest_backend -p 5000:5000 \
            #   -e MONGO_URI="${{ secrets.MONGO_URI }}" \
            #   -e YOUTUBE_API_KEY="${{ secrets.YOUTUBE_API_KEY }}" \
            #   -e REDIS_URL="${{ secrets.REDIS_URL }}" \
            #   -e REDIS_PASSWORD="${{ secrets.REDIS_PASSWORD }}" \
            #   -e NODE_ENV=production \
            #   divyanshujha/contest-backend:latest

            # sudo docker run -d --name contest_frontend -p 3000:3000 divyanshujha/contest-frontend:latest



            # WITH DOCKER-COMPOSE
            cd /home/ubuntu/contest_reminder

            echo "MONGO_URI=${{ secrets.MONGO_URI }}" > backend/.env
            echo "REDIS_URL=${{ secrets.REDIS_URL }}" >> backend/.env
            echo "REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }}" >> backend/.env
            echo "YOUTUBE_API_KEY=${{ secrets.YOUTUBE_API_KEY }}" >> backend/.env
            echo "NODE_ENV=production" >> backend/.env
            
            sudo docker-compose down
            sudo docker-compose pull
            
            sudo docker-compose up -d --build

